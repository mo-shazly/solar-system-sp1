name: depoly monitoring
on:
    push:

jobs:
    deploy:
        name: deploy to EKS
        runs-on: ubuntu-latest

        steps:
            - name: checkout config files
              uses: actions/checkout@v5


            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4.3.1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-west-2

            - name: updat kubeconfig
              run: | 
                    aws eks --region us-west-2 update-kubeconfig --name stage-eks-cluster

            - name: Trigger app deployment
              uses: statsig-io/kubectl-via-eksctl@main
              env:
                 aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                 aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                 region: us-west-2
                 cluster: stage-eks-cluster


            # - name: Deploy k8s deployments
            #   run: |
            #    kubectl apply -f deployment.yml
            #    kubectl apply -f service.yml
            #   working-directory: ./kubernetes

            - name: get ns
              run: kubectl get ns monitoring

            - name: Verify Deployment
              run: |
                kubectl get pods  
                kubectl get svc

    deploy-monitoring:
        needs: deploy
        name: deploy to EKS
        runs-on: ubuntu-latest
        env: 
          AWS_REGION: us-west-2
          EKS_CLUSTER_NAME: stage-eks-cluster
          GRAFANA_ADMIN_PASSWORD: ${{ secrets.grafana_admin_password }}

        steps:
            - name: checkout config files
              uses: actions/checkout@v5


            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4.3.1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-west-2

            - name: updat kubeconfig
              run: | 
                    aws eks --region us-west-2 update-kubeconfig --name stage-eks-cluster

            - name: Trigger app deployment
              uses: statsig-io/kubectl-via-eksctl@main
              env:
                 aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                 aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                 region: us-west-2
                 cluster: stage-eks-cluster

            # - name: Output monitoring namespace YAML
            #   run: kubectl create namespace monitoring --dry-run=client -o yaml

            # - name: Create monitoring namespace
            #   run: kubectl create namespace monitoring || true



            - name: Add Helm repos
              run: |
                helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
                helm repo add grafana https://grafana.github.io/helm-charts
                helm repo update
            - name: Render values with env
              run: |
               envsubst < values.yml > /tmp/values.rendered.yaml
               echo "Rendered values:"
               tail -n +1 /tmp/values.rendered.yaml
              working-directory: ./kubernetes

            - name: Install/Upgrade kube-prometheus-stack
              run: |
                helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
                  --namespace monitoring \
                  --values /tmp/values.rendered.yaml \
                  --wait --timeout 30m

            # - name: install prometheus
            #   run: |
            #      helm upgrade --install prometheus prometheus-community/prometheus \
            #        --namespace monitoring --create-namespace --wait --timeout 10m

            # - name: install grafana
            #   run: |
            #     helm upgrade --install grafana grafana/grafana \
            #        --namespace monitoring --set adminPassword=admin --wait --timeout 10m

            - name: Apply ServiceMonitor for my app
              run: |
                kubectl apply -f servicemonitor-splar-system.yaml
              working-directory: ./kubernetes

            - name: Show external endpoints
              run: |
                echo "Waiting for LoadBalancer IPs..."
                kubectl -n monitoring wait --for=condition=available deploy/kube-prometheus-stack-grafana --timeout=10m
                kubectl -n monitoring get svc -o wide
                echo "Grafana URL:"
                kubectl -n monitoring get svc kube-prometheus-stack-grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}{"\n"}{.status.loadBalancer.ingress[0].ip}{"\n"}'
                echo "Prometheus URL:"
                kubectl -n monitoring get svc kube-prometheus-stack-prometheus -o jsonpath='{.status.loadBalancer.ingress[0].hostname}{"\n"}{.status.loadBalancer.ingress[0].ip}{"\n"}'

            - name: Verify Deployment
              run: |
                kubectl get pods  
                kubectl get svc

            - name: Check cluster nodes and resources
              run: |
                kubectl get nodes -o wide
                kubectl describe nodes
                kubectl top nodes || true


                    








                    



            









                    



    


            








            



    




